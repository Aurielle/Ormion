<?php

/**
 * Cached Texy
 *
 * @author Jan Marek
 * @license MIT
 */
class TexyBehavior extends Object implements IBehavior {

	/** @var array */
	private static $texyObjects;

	/** @var string */
	private $source;

	/** @var string */
	private $name;

	/** @var string */
	private $texyClass;


	/**
	 * Constructor
	 * @param string $name name of field with generated html
	 * @param string $source name of field with Texy source
	 * @param string $texyClass Texy class name
	 */
	public function __construct($name, $source, $texyClass = "Texy") {
		$this->name = $name;
		$this->source = $source;
		$this->texyClass = $texyClass;
	}


	/**
	 * Setup behavior
	 * @param OrmionRecord $record
	 */
	public function setUp(OrmionRecord $record) {
		$record->registerGetter($this->name, array($this, "getHtml"));
		$record->onAfterUpdate[] = array($this, "clearCacheIfModified");
		$record->onAfterDelete[] = array($this, "clearCache");
	}


	/**
	 * Get Texy object
	 * @param string $texyClass
	 * @return Texy
	 */
	private function getTexy($texyClass) {
		if (empty(self::$texyObjects[$texyClass])) {
			self::$texyObjects[$texyClass] = new $texyClass;
		}

		return self::$texyObjects[$texyClass];
	}


	/**
	 * Get html generated by Texy
	 * @param OrmionRecord $record
	 * @return string
	 */
	public function getHtml(OrmionRecord $record) {
		$cache = $this->getCache();
		$key = get_class($record) . "/" . $this->name;

		if (empty($cache[$key])) {
			$texy = $this->getTexy($this->texyClass);
			$cache[$key] = $texy->process($record->{$this->source});
		}

		return $cache[$key];
	}


	/**
	 * Remove cached html from cache
	 * @param OrmionRecord $record
	 */
	public function clearCache(OrmionRecord $record) {
		$cache = $this->getCache();
		$key = get_class($record) . "/" . $this->name;
		unset($cache[$key]);
	}


	/**
	 * Remove cached html from cache if source is modified
	 * @param OrmionRecord $record
	 */
	public function clearCacheIfModified(OrmionRecord $record) {
		if ($record->isValueModified($this->source)) {
			$this->clearCache($record);
		}
	}


	/**
	 * Get cache
	 * @return Cache
	 */
	private function getCache() {
		return Environment::getCache(__CLASS__);
	}
	
}